TIL Daily Log

January 2023

1.1 - Concept: Spread syntax (...), Language/Framework: JavaScript

TIL... The spread syntax (...) expression, introduced in ES6, allows you to "expand" an iterable, such as an array or string, into its individual elements in places where zero or more arguments (for function calls) or elements (for array literals) are expected. For object literals, the spread syntax enumerates the properties of an object and adds the key-value pairs to the object being created. (MDN - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax)

function fullBirbName(x, y) {
    return x + " " + y;
}

const grayCatbird = ["Gray", "Catbird"];

console.log(fullBirbName(...grayCatbird));
// expected output: Gray Catbird
// without spread syntax, the expect output would be: Gray,Catbird undefined

Additional reading: freeCodeCamp - https://www.freecodecamp.org/news/an-introduction-to-spread-syntax-in-javascript-fba39595922c/

1.2 - Concept: Iterating over an object's properties wit a for...in loop, Language/Framework: JavaScript

TIL... You can use a for...in loop to iterate over an object and perform operation the object's property names and corresponding values. (MDN - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in)

const carolinaWren = { "Common name": "Carolina Wren", "Binomial name": "Thryothorus ludovicianus", "Family": "Wrens", "Habitat": "Dense forest, farm edges, and suburban areas" };

for (const property in carolinaWren) {
    console.log(`${property}: ${carolinaWren[property]}`);
}
/* expected output:
    Common name: Carolina Wren
    Binomial name: Thyrothorus ludovicianus
    Family: Wrens
    Habitat: Dense forest, farm edges, and suburban areas */

1.3 - Concept: Calculating the sum of an array using the forEach() method, Language/Framework: JavaScript

TIL... You can use the JavaScript forEach() method to find the sum of an array with numbers. The arr.forEach() method will call the provided function once for each element of the array. (GeeksforGeeks - https://www.geeksforgeeks.org/how-to-find-the-sum-of-all-elements-of-a-given-array-in-javascript/)

let triangleSides = [1, 1, 1];

function trianglePerimeter(arr) {
    let sum = 0;
    arr.forEach(x => {
        sum += x;
    })
    return sum;
}

console.log(trianglePerimeter(triangleSides));
// expected output: 3